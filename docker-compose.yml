version: '3.7'

services:

  backend:
    depends_on:
      db:
        condition: service_healthy
    build: .
    restart: always
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/backend
    environment:
      - DB=django.db.backends.postgresql_psycopg2
      - DB_NAME=test_db
      - DB_USER=test_admin
      - DB_PASSWORD=test_admin_pass
      - DB_HOST=db
      - DB_HOST_PORT=5432

      - REDIS_HOST=redis
      - REDIS_PORT=6379

      - DEBUG=True
      - SECRET_KEY=very-secret-key
    ports:
      - 8000:8000
    networks:
      backend:

  db:
    depends_on:
      - redis
    restart: always
    image: postgres:12.0-alpine
    container_name: db
    volumes:
      - db:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=test_admin
      - POSTGRES_PASSWORD=test_admin_pass
      - POSTGRES_DB=test_db
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U test_admin -d test_db"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      backend:

  redis:
    restart: always
    image: redis:5-alpine
    volumes:
      - redis:/data
    ports:
      - "6379:6379"
    networks:
      backend:

  celery:
    build: .
    command: celery -A core worker -l info
    volumes:
      - ./celery/:/celery/
    depends_on:
      - redis

volumes:
  db:
  redis:
  celery:

networks:
  backend: